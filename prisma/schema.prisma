// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model ForbiddenWord {
  id   String @id @default(uuid())
  word String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Member {
  id           String  @id
  username     String
  profileImage String
  city         String
  state        String
  description  String
  photoGallery Photo[]
  sourceLikes  Like[]  @relation("source")
  targetLikes  Like[]  @relation("target")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id         String  @id @default(uuid())
  memberId   String
  image      String
  isApproved Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  member Member @relation(fields: [memberId], references: [id], onDelete: Cascade)
}

model Like {
  sourceMemberId String
  sourceMember Member @relation("source", fields: [sourceMemberId], references: [id], onDelete: Cascade)

  targetMemberId String
  targetMember Member @relation("target", fields: [targetMemberId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([sourceMemberId, targetMemberId])
}
